package prediction_test

import (
	"testing"

	"github.com/golang/mock/gomock"
	"github.com/jamestunnell/marketanalysis/indicators"
	"github.com/jamestunnell/marketanalysis/models/bar"
	"github.com/jamestunnell/marketanalysis/models/bar/testutil"
	"github.com/jamestunnell/marketanalysis/prediction"
	"github.com/jamestunnell/marketanalysis/prediction/mock_prediction"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

const trainingBarsJSON = `
{"t":"2023-03-03T14:00:00Z","o":399.87,"h":400.12,"l":399.83,"c":400.09,"v":72296,"n":350,"vw":399.927154}
{"t":"2023-03-03T14:01:00Z","o":400.1,"h":400.13,"l":399.97,"c":399.99,"v":33978,"n":209,"vw":400.058277}
{"t":"2023-03-03T14:02:00Z","o":400.04,"h":400.09,"l":400,"c":400,"v":5943,"n":74,"vw":400.034729}
{"t":"2023-03-03T14:03:00Z","o":400.03,"h":400.1,"l":400.02,"c":400.1,"v":21730,"n":128,"vw":400.091527}
{"t":"2023-03-03T14:04:00Z","o":400.09,"h":400.16,"l":400.09,"c":400.09,"v":17292,"n":106,"vw":400.1307}
{"t":"2023-03-03T14:05:00Z","o":400.11,"h":400.12,"l":400.07,"c":400.07,"v":3842,"n":62,"vw":400.093827}
{"t":"2023-03-03T14:06:00Z","o":400.03,"h":400.09,"l":400.02,"c":400.07,"v":18877,"n":117,"vw":400.063129}
{"t":"2023-03-03T14:07:00Z","o":400.07,"h":400.23,"l":400.0606,"c":400.15,"v":22698,"n":158,"vw":400.186493}
{"t":"2023-03-03T14:08:00Z","o":400.16,"h":400.25,"l":400.16,"c":400.22,"v":7828,"n":97,"vw":400.221007}
{"t":"2023-03-03T14:09:00Z","o":400.21,"h":400.21,"l":400.1004,"c":400.13,"v":3065,"n":66,"vw":400.141486}
{"t":"2023-03-03T14:10:00Z","o":400.14,"h":400.15,"l":400.09,"c":400.09,"v":2760,"n":48,"vw":400.119522}
{"t":"2023-03-03T14:11:00Z","o":400.09,"h":400.21,"l":400.09,"c":400.2,"v":16423,"n":106,"vw":400.132448}
{"t":"2023-03-03T14:12:00Z","o":400.18,"h":400.22,"l":400.15,"c":400.22,"v":7857,"n":70,"vw":400.185469}
{"t":"2023-03-03T14:13:00Z","o":400.23,"h":400.28,"l":400.12,"c":400.16,"v":15660,"n":123,"vw":400.206688}
{"t":"2023-03-03T14:14:00Z","o":400.15,"h":400.16,"l":400.12,"c":400.12,"v":21603,"n":79,"vw":400.130536}
{"t":"2023-03-03T14:15:00Z","o":400.13,"h":400.14,"l":400.04,"c":400.06,"v":29695,"n":89,"vw":400.121434}
{"t":"2023-03-03T14:16:00Z","o":400.05,"h":400.12,"l":400.01,"c":400.01,"v":13608,"n":66,"vw":400.084862}
{"t":"2023-03-03T14:17:00Z","o":400.03,"h":400.03,"l":399.9,"c":399.92,"v":13064,"n":155,"vw":399.953164}
{"t":"2023-03-03T14:18:00Z","o":399.93,"h":399.97,"l":399.93,"c":399.95,"v":16719,"n":86,"vw":399.93641}
{"t":"2023-03-03T14:19:00Z","o":399.93,"h":399.93,"l":399.85,"c":399.87,"v":14281,"n":78,"vw":399.87384}
{"t":"2023-03-03T14:20:00Z","o":399.86,"h":399.94,"l":399.86,"c":399.93,"v":8677,"n":84,"vw":399.904434}
{"t":"2023-03-03T14:21:00Z","o":399.9,"h":399.9,"l":399.87,"c":399.88,"v":14642,"n":75,"vw":399.885458}
{"t":"2023-03-03T14:22:00Z","o":399.86,"h":399.93,"l":399.84,"c":399.92,"v":43306,"n":117,"vw":399.856873}
{"t":"2023-03-03T14:23:00Z","o":399.93,"h":399.96,"l":399.8,"c":399.8,"v":5822,"n":70,"vw":399.894287}
{"t":"2023-03-03T14:24:00Z","o":399.81,"h":399.83,"l":399.8,"c":399.82,"v":12259,"n":101,"vw":399.810643}
{"t":"2023-03-03T14:25:00Z","o":399.8,"h":399.83,"l":399.78,"c":399.79,"v":11388,"n":79,"vw":399.798444}
{"t":"2023-03-03T14:26:00Z","o":399.78,"h":399.79,"l":399.76,"c":399.78,"v":8610,"n":77,"vw":399.774349}
{"t":"2023-03-03T14:27:00Z","o":399.78,"h":399.84,"l":399.77,"c":399.82,"v":14645,"n":105,"vw":399.810328}
{"t":"2023-03-03T14:28:00Z","o":399.81,"h":399.81,"l":399.76,"c":399.78,"v":53111,"n":304,"vw":399.794499}
{"t":"2023-03-03T14:29:00Z","o":399.78,"h":399.79,"l":399.68,"c":399.71,"v":80278,"n":421,"vw":399.733773}
{"t":"2023-03-03T14:30:00Z","o":399.71,"h":399.82,"l":399.21,"c":399.25,"v":833798,"n":5287,"vw":399.515926}
{"t":"2023-03-03T14:31:00Z","o":399.25,"h":399.43,"l":399.17,"c":399.31,"v":366730,"n":3455,"vw":399.314523}
{"t":"2023-03-03T14:32:00Z","o":399.31,"h":399.4301,"l":399.23,"c":399.3,"v":263160,"n":2490,"vw":399.325166}
{"t":"2023-03-03T14:33:00Z","o":399.3,"h":399.39,"l":399.19,"c":399.22,"v":290489,"n":2784,"vw":399.260992}
{"t":"2023-03-03T14:34:00Z","o":399.24,"h":399.33,"l":399.155,"c":399.32,"v":305372,"n":2752,"vw":399.241859}
{"t":"2023-03-03T14:35:00Z","o":399.32,"h":399.41,"l":399.22,"c":399.34,"v":306809,"n":2738,"vw":399.321445}
{"t":"2023-03-03T14:36:00Z","o":399.34,"h":399.44,"l":399.16,"c":399.42,"v":384490,"n":2949,"vw":399.337349}
{"t":"2023-03-03T14:37:00Z","o":399.42,"h":399.56,"l":399.31,"c":399.51,"v":256150,"n":2276,"vw":399.465035}
{"t":"2023-03-03T14:38:00Z","o":399.52,"h":399.67,"l":399.26,"c":399.3412,"v":239723,"n":2160,"vw":399.470805}
{"t":"2023-03-03T14:39:00Z","o":399.35,"h":399.5,"l":399.23,"c":399.28,"v":189089,"n":1671,"vw":399.349424}
{"t":"2023-03-03T14:40:00Z","o":399.285,"h":399.41,"l":399.2799,"c":399.28,"v":171869,"n":1630,"vw":399.339077}
{"t":"2023-03-03T14:41:00Z","o":399.28,"h":399.67,"l":399.24,"c":399.65,"v":269204,"n":2278,"vw":399.511052}
{"t":"2023-03-03T14:42:00Z","o":399.66,"h":399.67,"l":399.37,"c":399.575,"v":188360,"n":1875,"vw":399.495264}
{"t":"2023-03-03T14:43:00Z","o":399.575,"h":399.59,"l":399.45,"c":399.46,"v":286675,"n":2508,"vw":399.526099}
{"t":"2023-03-03T14:44:00Z","o":399.45,"h":399.52,"l":399.38,"c":399.4878,"v":116576,"n":1115,"vw":399.448725}
{"t":"2023-03-03T14:45:00Z","o":399.49,"h":399.87,"l":399.49,"c":399.79,"v":310632,"n":3074,"vw":399.701654}
{"t":"2023-03-03T14:46:00Z","o":399.78,"h":400.15,"l":399.78,"c":399.9601,"v":360075,"n":2823,"vw":399.983234}
{"t":"2023-03-03T14:47:00Z","o":399.9601,"h":400,"l":399.745,"c":399.93,"v":256686,"n":2354,"vw":399.878143}
{"t":"2023-03-03T14:48:00Z","o":399.94,"h":400.21,"l":399.91,"c":400.07,"v":241922,"n":2109,"vw":400.083293}
{"t":"2023-03-03T14:49:00Z","o":400.07,"h":400.09,"l":399.9101,"c":400.04,"v":192305,"n":1815,"vw":400.014248}
{"t":"2023-03-03T14:50:00Z","o":400.035,"h":400.13,"l":399.93,"c":399.95,"v":226823,"n":1854,"vw":400.033855}
{"t":"2023-03-03T14:51:00Z","o":399.95,"h":400.0522,"l":399.75,"c":399.85,"v":227801,"n":1759,"vw":399.899236}
{"t":"2023-03-03T14:52:00Z","o":399.85,"h":400.36,"l":399.82,"c":400.235,"v":377825,"n":3034,"vw":400.140483}
{"t":"2023-03-03T14:53:00Z","o":400.22,"h":400.51,"l":400.2,"c":400.4101,"v":389680,"n":3130,"vw":400.32283}
{"t":"2023-03-03T14:54:00Z","o":400.42,"h":400.64,"l":400.415,"c":400.5499,"v":351906,"n":2827,"vw":400.546395}
{"t":"2023-03-03T14:55:00Z","o":400.53,"h":400.75,"l":400.52,"c":400.73,"v":410322,"n":3295,"vw":400.663167}
{"t":"2023-03-03T14:56:00Z","o":400.74,"h":400.9,"l":400.65,"c":400.885,"v":387790,"n":3202,"vw":400.794804}
{"t":"2023-03-03T14:57:00Z","o":400.88,"h":400.92,"l":400.6,"c":400.625,"v":533976,"n":3125,"vw":400.765743}
{"t":"2023-03-03T14:58:00Z","o":400.62,"h":400.65,"l":400.45,"c":400.4799,"v":225468,"n":1759,"vw":400.560025}
{"t":"2023-03-03T14:59:00Z","o":400.48,"h":400.57,"l":400.42,"c":400.55,"v":193058,"n":1692,"vw":400.507277}
`

func TestBarPredictor(t *testing.T) {
	ctrl := gomock.NewController(t)
	p := mock_prediction.NewMockPredictor(ctrl)
	atr := indicators.NewATR(5)

	bp := prediction.NewBarPredictor(2, atr, p)

	// no bars - can't train
	assert.Error(t, bp.Train([]*bar.Bar{}))

	bars := makeTestBars(t, trainingBarsJSON)

	// not enough bars for warmup period and training
	assert.Error(t, bp.Train(bars[:5]))

	p.EXPECT().Train(gomock.Len(len(bars) - 8))

	assert.NoError(t, bp.Train(bars))
}

func makeTestBars(t *testing.T, jsonStr string) []*bar.Bar {

	bars, err := testutil.MakeTestBars(jsonStr)

	require.NoError(t, err)

	return bars
}
